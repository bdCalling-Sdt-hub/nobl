import { AVPlaybackStatus, ResizeMode, Video } from "expo-av";
import { ActivityIndicator, StyleSheet, Text, View } from "react-native";
import { PrimaryColor, _WIGHT } from "@/utils/utils";

import React from "react";

interface VideoPlayerCardProps {
  source: string;
}

const VideoPlayerCard = ({ source }: VideoPlayerCardProps) => {
  const videoRef = React.useRef<Video>(null);
  const [status, setStatus] = React.useState<AVPlaybackStatus | any>({});

  return (
    <View>
      {(!status.isLoaded || status.isBuffering) && (
        <View
          style={[
            styles.video,
            { justifyContent: "center", position: "absolute" },
          ]}
        >
          <ActivityIndicator color={PrimaryColor} size="large" />
        </View>
      )}
      {status.error && (
        <View
          style={[
            styles.video,
            { justifyContent: "center", position: "absolute" },
          ]}
        >
          <Text style={{ color: "red", textAlign: "center" }}>
            Failed to load video: {status.error}
          </Text>
        </View>
      )}

      <Video
        ref={videoRef}
        style={styles.video}
        source={{
          uri: "http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ElephantsDream.mp4",
        }}
        // source={{ uri: source }}
        useNativeControls
        resizeMode={ResizeMode.CONTAIN}
        isLooping={false}
        onPlaybackStatusUpdate={setStatus}
      />
    </View>
  );
};

export default React.memo(VideoPlayerCard);

const styles = StyleSheet.create({
  contentContainer: {
    flex: 1,
    padding: 10,
    alignItems: "center",
    justifyContent: "center",
    paddingHorizontal: 50,
  },
  button: {
    alignItems: "center",
    justifyContent: "center",
    borderRadius: 3,
    paddingVertical: 8,
    paddingHorizontal: 12,
    backgroundColor: "#4630ec",
  },
  buttonText: {
    fontSize: 12,
    fontWeight: "bold",
    color: "#eeeeee",
    textAlign: "center",
  },
  video: {
    width: _WIGHT,
    aspectRatio: 16 / 9,
  },
});
